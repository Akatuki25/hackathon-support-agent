name: Terraform Plan

on:
  pull_request:
    paths:
      - 'terraform/**'

jobs:
  plan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Init
        working-directory: ./terraform
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        env:
          NEON_API_KEY: ${{ secrets.NEON_API_KEY }}
          VERCEL_API_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          TF_VAR_github_repo: ${{ github.repository }}
          TF_VAR_backend_url: ${{ secrets.BACKEND_URL }}
          TF_VAR_nextauth_secret: ${{ secrets.NEXTAUTH_SECRET }}
          TF_VAR_gh_oauth_client_id: ${{ secrets.GH_OAUTH_CLIENT_ID }}
          TF_VAR_gh_oauth_client_secret: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
        run: |
          terraform plan -var-file=environments/prod/terraform.tfvars -out=tfplan

      - name: Comment PR with Plan
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const { execSync } = require('child_process');
            const plan = execSync('cd terraform && terraform show -no-color tfplan').toString();

            const output = `## Terraform Plan

            \`\`\`terraform
            ${plan}
            \`\`\`

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
