name: Terraform Apply

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'

jobs:
  apply:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.0
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: ./terraform
        env:
          TF_VAR_neon_api_key: ${{ secrets.NEON_API_KEY }}
          TF_VAR_vercel_api_token: ${{ secrets.VERCEL_TOKEN }}
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        env:
          TF_VAR_neon_api_key: ${{ secrets.NEON_API_KEY }}
          TF_VAR_vercel_api_token: ${{ secrets.VERCEL_TOKEN }}
          TF_VAR_github_repo: ${{ github.repository }}
          TF_VAR_backend_url: ${{ secrets.BACKEND_URL }}
          TF_VAR_nextauth_secret: ${{ secrets.NEXTAUTH_SECRET }}
          TF_VAR_gh_oauth_client_id: ${{ secrets.GH_OAUTH_CLIENT_ID }}
          TF_VAR_gh_oauth_client_secret: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
        run: |
          terraform apply -var-file=environments/prod/terraform.tfvars -auto-approve

      - name: Output Database URL
        working-directory: ./terraform
        run: |
          echo "::add-mask::$(terraform output -raw neon_database_url)"
          echo "DATABASE_URL=$(terraform output -raw neon_database_url)" >> $GITHUB_ENV

      - name: Notify Success
        if: success()
        run: |
          echo "âœ… Infrastructure deployed successfully"
          echo "Vercel URL: $(cd terraform && terraform output -raw vercel_project_url)"
